const { userSchema } = require('../models/schemas/user.js');

const userRepository = {

    async findUserById(user_id) {
        try {
            const findUser = await User.findOne({
                "_id": user_id
            });

            if (!findUser) {
                return res.status(400).json({
                    resultCode: "404",
                    message: "해당 사용자를 찾을 수 없습니다."
                });
            }

        } catch (err) {
            console.error(err);
            res.status(500).json({
                resultCode: "500",
                message: "Invalid Error"
            });
        }
    },

    async findUserByEmail (email) {
        try {
            const findUser = await User.findOne({
                "email": email
            });

            if (!findUser) {
                return res.status(200).json({
                    resultCode: "404",
                    message: "사용자가 존재하지 않습니다."
                })
            }

        } catch (err) {
            console.error(err);
            res.status(500).json({
                resultCode: "500",
                message: "Invalid Error"
            });
        }
    },

    async updateUser(email, updateData) {
        try {

            const updateUserInfo = await User.updateOne({ "email": email }, { $set: { updateData } });

            const updatedUser = await User.findOne(
                { "_id": findUser._id },
                {
                    "_id": true,
                    "user_name": true,
                    "email": true,
                    "intro_yn": true,
                    "phone_number": true,
                    "file_key": true, 
                    "file_name": true
                });

            return res.status(200).json({
                resultCode: "200", 
                message: "내 정보 수정 성공",
                data: {
                    user_id: updatedUser._id,
                    user_name: updatedUser.user_name,
                    email: updatedUser.email,
                    intro_yn: updatedUser.intro_yn,
                    phone_number: updatedUser.phone_number, 
                    file_key: updatedUser.file_key, 
                    file_name: updatedUser.file_name
                }
                
            }); 
        } catch (err) {
            console.error(err);
            res.status(500).json({
                resultCode: "500",
                message: "Invalid Error"
            });
        }

    }

}

module.exports = userRepository;
